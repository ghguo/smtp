// DALContainer support file
//
// DO NOT MODIFY THIS FILE DIRECTLY.  IT WILL BE OVERWRITTEN.
// Generated by SQLServerGenerator.cs
// Copyright (c) 2010, Chris Laforet Software.  All rights reserved
//
// Generated at 04/24/2010 03:03


using System;
using System.Data;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Sql;
using System.Collections.Generic;
using SupportLibrary.Database;


namespace SupportLibrary.Database
	{
	public partial class DALContainer
		{
		private static DALContainer TheContainer = null;
		private Dictionary<string,object> dals = new Dictionary<string,object>();

		private void OpenDALs()
			{
			string connectionString = DatabaseSupport.GetConnectionString();

			object dal = new HeaderDAL(connectionString);
			dals.Add("Header",dal);

			dal = new DeliveryAttemptDAL(connectionString);
			dals.Add("DeliveryAttempt",dal);

			dal = new ConfigurationDAL(connectionString);
			dals.Add("Configuration",dal);

			dal = new AllowedDAL(connectionString);
			dals.Add("Allowed",dal);

			dal = new ConnectionDAL(connectionString);
			dals.Add("Connection",dal);

			dal = new BodyDAL(connectionString);
			dals.Add("Body",dal);
			}

		private DALContainer()
			{
			OpenDALs();
			OpenDefinedDALs();
			}

		///<summary>
		///Provides a singleton DALContainer object.  Call this to retrieve the object or to create it on first invocation.
		///</summary>
		static public DALContainer GetDALContainer()
			{
			if (DALContainer.TheContainer == null)
				DALContainer.TheContainer = new DALContainer();
			return DALContainer.TheContainer;
			}

		public object GetDAL(string table)
			{
			if (dals.ContainsKey(table))
				return dals[table];
			return null;
			}

		public void RegisterDAL(string TableName,object DALHandler)
			{
			if (dals.ContainsKey(TableName))
				dals.Remove(TableName);
			dals[TableName] = DALHandler;
			}

		public HeaderDAL GetHeaderDAL()
			{
			return GetDAL("Header") as HeaderDAL;
			}

		public DeliveryAttemptDAL GetDeliveryAttemptDAL()
			{
			return GetDAL("DeliveryAttempt") as DeliveryAttemptDAL;
			}

		public ConfigurationDAL GetConfigurationDAL()
			{
			return GetDAL("Configuration") as ConfigurationDAL;
			}

		public AllowedDAL GetAllowedDAL()
			{
			return GetDAL("Allowed") as AllowedDAL;
			}

		public ConnectionDAL GetConnectionDAL()
			{
			return GetDAL("Connection") as ConnectionDAL;
			}

		public BodyDAL GetBodyDAL()
			{
			return GetDAL("Body") as BodyDAL;
			}

		}
	}
